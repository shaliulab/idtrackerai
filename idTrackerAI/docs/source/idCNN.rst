Modules
=======

^^^^^^^^^^^^^^^^^^^^
Accumulation manager
^^^^^^^^^^^^^^^^^^^^

.. automodule:: accumulation_manager
   :members:

^^^^^^^^^^^
Accumulator
^^^^^^^^^^^

The accumulator module contains the main routine used to compute the accumulation process, which
is an essential part of both the second and third fingerprint protocol.

.. automodule:: accumulator
   :members:

^^^^^^^^
Assigner
^^^^^^^^

.. automodule:: assigner
   :members:

^^^^^
Blob
^^^^^

.. automodule:: blob
  :members:

^^^^^^^^^^^^^
List of Blobs
^^^^^^^^^^^^^

Collection of instances of the class :class:`~blob.Blob` generated by considering
all the blobs segmented from the video.

.. automodule:: list_of_blobs
  :members:

^^^^^^^^^^
Model area
^^^^^^^^^^
Allows to apply a model of the area of the indiviudals to be tracked to all the
blobs collected during the segmentation process (see :mod:`~segmentation`)

.. automodule:: model_area
  :members:

^^^^^^^^^^^^^^^^^
Crossing detector
^^^^^^^^^^^^^^^^^

Given a collection of Blob objects (see :class:`~blob..Blob`), the crossing detector module allows to apply a pre-computed model of the area to each of the blobs and, if specified,
use a function approximator (in this case a convolutional neural network) in order to distinguish between Blob representing single individual and touching individuals.

.. automodule:: crossing_detector
  :members:

^^^^^^^^
Fragment
^^^^^^^^

A fragment is a collection of Blob objects (see :class:`~blob..Blob`) that refer to the same individual. A Fragment object manages such a collection of Blob objects
to facilitate the fingerprint operations and later on the identification of the animal reprpresented in the fragment.

.. automodule:: fragment
  :members:

^^^^^^^^^^^^^^^^^
List of fragments
^^^^^^^^^^^^^^^^^

Collection of instances of the class :class:`~fragment.Fragment`

.. automodule:: list_of_fragments
   :members:

^^^^^^^^^^^^^^^
Global fragment
^^^^^^^^^^^^^^^

Global fragments are the core of the tracking algorithm: They are collection of instances of the class :class:`~fragment.Fragment`
that contains images extracted from a part of the video in which all the animals are visible.

.. automodule:: globalfragment
  :members:

^^^^^^^^^^^^^^^^^^^^^^^^
List of global fragments
^^^^^^^^^^^^^^^^^^^^^^^^

Collection of instances of the class :class:`~globalfragment.GlobalFragment`.
Global fragments are used to create the dataset of labelled images used to train
the idCNN during the fingerprint protocols cascade.

.. automodule:: list_of_global_fragments
   :members:

^^^^^^^^^^^^
Segmentation
^^^^^^^^^^^^

.. automodule:: segmentation
  :members:

^^^^^^^^^^^^^^^^^^
Segmentation utils
^^^^^^^^^^^^^^^^^^

.. automodule:: video_utils
  :members:

^^^^^^^^
Get data
^^^^^^^^

.. automodule:: get_data
  :members:

^^^^^^^^^^^^
Epoch runner
^^^^^^^^^^^^

Computes a given operation for an entire epoch divided in batches

.. automodule:: epoch_runner
  :members:

^^^^^^^
Trainer
^^^^^^^

Trains an instance of the class :class:`~id_CNN.ConvNetwork`

.. automodule:: trainer
  :members:

^^^^^^^^^^^
Pretraining
^^^^^^^^^^^

Pretrains the network as the first step of the third fingerprint protocol.

.. automodule:: pre_trainer
  :members:

^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
Impossible velocity jumps correction
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. automodule:: correct_impossible_velocity_jumps
  :members:


^^^^^^^^^^^^^^^^
Get trajectories
^^^^^^^^^^^^^^^^

Produces the dictionary of outputs containing the individual trajectories (centroids),
the git output, the path to the video whose tracking poroduced the individual trajectories and
frames_per_second.

.. automodule:: get_trajectories
  :members:

^^^^^
Video
^^^^^

Collects information concerning the video (fps, number of channels, ...) and manages
the creation of the folders used to save and load both partial and final outputs of
the algorithm

.. automodule:: video
  :members:
